<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Ollama Chatbot</title>
<style type="text/css">body{width:700px;padding:10px 0;margin:0 auto;font-family:Verdana;overflow:none;background:#eee;font-size:14px;margin:10;background-color:silver;background-image:url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%22100%25%22%20height%3D%22100%25%22%20viewBox%3D%220%200%201%201%22%20preserveAspectRatio%3D%22none%22%3E%3ClinearGradient%20id%3D%22g83%22%20gradientUnits%3D%22userSpaceOnUse%22%20x1%3D%220%25%22%20y1%3D%220%25%22%20x2%3D%220%25%22%20y2%3D%22100%25%22%3E%3Cstop%20stop-color%3D%22%23777777%22%20offset%3D%220%22/%3E%3Cstop%20stop-color%3D%22%23EBF7FA%22%20offset%3D%221%22/%3E%3C/linearGradient%3E%3Crect%20x%3D%220%22%20y%3D%220%22%20width%3D%221%22%20height%3D%221%22%20fill%3D%22url%28%23g83%29%22%20/%3E%3C/svg%3E');background-repeat:repeat;background-attachment:fixed;background-position:top left}textarea{font-family:Verdana;border:1px black solid;overflow:auto;resize:both;font-size:14px;width:700px;-webkit-box-shadow:inset 2px 5px 3px 0 gray;-moz-box-shadow:inset 2px 5px 3px 0 gray;box-shadow:inset 2px 5px 3px 0 gray;background-color:#F5F5F5}input{font-family:Verdana;font-size:14px;border:1px solid #000;-webkit-box-shadow:2px 2px 2px gray;-moz-box-shadow:2px 2px 2px gray;box-shadow:2px 2px 2px gray;cursor:pointer;color:#000}div{width:728px}.buttons{color:blue;margin-top:6px;margin-bottom:6px;font-size:9px;min-width:20px;max-width:100px;background-color:#F5F5F5}input[type=button]{font-family:Verdana;font-size:10px;min-width:10px;max-width:200px}.hidden{display:none}.visible{display:block}</style>
</head><body charset="utf-8">
<textarea id="pre" rows="3" cols="50" onmouseover="this.select();" placeholder="&#010;&#009;Type your question." wrap="on" nowrap="false" autocapitalize="false" autocorrect="false" spellcheck="false" type="inline" charset="utf-8"></textarea>
<input type="checkbox" id="talk" name="talk">TTS&#32;|&#32;
Preprompt: <select id="methods" onchange="prefill(value);"><option value="1">Image Prompt</option><option value="2">JavaScript</option><option value="3">Python</option><option value="4">HTML5</option><option value="5">Interactive SVG</option><option value="0" selected>Blank</option></select><br>
<textarea id="que" rows="5" cols="77" onmouseover="this.select();" placeholder="&#010;&#009;Type your question." wrap="on" nowrap="false" autocapitalize="false" autocorrect="false" spellcheck="false" type="inline" charset="utf-8" x-webkit-speech></textarea>
<p><textarea id="ans" rows="15" cols="77" onmouseover="this.select();" placeholder="&#010;&#009;LLM answers here." wrap="on" nowrap="false" autocapitalize="false" autocorrect="false" spellcheck="false" type="inline" charset="utf-8"></textarea>
<select id="modelSelect"><option value="llama3.2">Choose LLM</option></select>&#32;<input type="button" value="CHAT" onclick="llmz(pre.value+' '+que.value);">
<script>
function togglePush(e){var t="classList",a=document.getElementById("pre");1==e&&(a[t].remove("hidden"),a[t].add("visible")),0==e&&(a[t].remove("visible"),a[t].add("hidden"))}
function llmz(e,t){t=modelSelect.value,!e.length>2&&(e=prompt("Type your question below.\n\nAI will answer.","")),console.log(t);var a,o=new XMLHttpRequest;o.open("POST","http://127.0.0.1:11434/api/generate",!0),o.send(JSON.stringify({repeat_penalty:1.5,keep_alive:10,num_gpu:1,main_gpu:0,num_ctx:2048,raw:!1,low_vram:!1,model:t,prompt:e,stream:!1,options:{temperature:1,num_thread:8,num_ctx:2024}})),o.onload=function(){a=JSON.parse(o.responseText).response,talk.checked&&a&&_say(a),ans.value=a}}
function prefill(e,t){0==e&&(togglePush(0),e="",t="Why is the sky blue?"),1==e&&(togglePush(1),e='You will assist with making professional prompts for AI image generation using Stable Diffusion with Flux dev model.\n\nThe prompts should be a detailed paragraph, precise without explanation, extra quotes or asterix.\n\nUse 3D CAD terms for manipulating models for special effects in images.\n\nEach prompt should include "photo of" and an action scene description.\n\nCreate a unnumbered set of 10 creative image prompts by rewriting the following prompt (make it better):\n\n',t="a snake looks like rottweiler"),2==e&&(togglePush(1),e="You are a JavaScript programming assistant who gives code without explanations. Please create JS code to:",t="find repeated words in array, count and sort by most to least"),3==e&&(togglePush(1),e="You are a Python programming assistant who gives code without explanations. Please create PY code to:",t="find repeated words in array, count and sort by most to least"),4==e&&(togglePush(1),e="You are a web application programming assistant who gives HTML, Javascript and CSS code without explanations. Please create interactive and runnable HTML5 code to:",t="base64 encode and decode text. Provide a form with 2 texareas."),5==e&&(togglePush(1),e="You are a web application programming assistant who gives HTML embedded SVG code using Javascript and CSS code. No explanations. Please create interactive and runnable SVG code to:",t="animate a analog clock with current time."),pre.value="",que.value="",e&&(pre.value=e),t&&(que.value=t)}
function _say(e){var t=window.speechSynthesis;t.speak(new SpeechSynthesisUtterance(e))}
async function fetchModels(){(await(await fetch("http://127.0.0.1:11434/api/tags")).json()).models.forEach(function(e){var t=document.createElement("option"),a=e.name.replace(":latest","");t.value=a,t.textContent=a+" ("+(e.size/1073741824).toFixed(1)+" GB)",modelSelect.appendChild(t)})}prefill(methods.value,"0"),fetchModels();
</script>
</body>
</html>
